---
- set_fact:
    server_groups="{{ groups.keys()  | map('regex_search','damp.*') | select('string') | list }}"

- name: Install MySQL-server for Orchestrator
  apt:
    name: mysql-server-5.7
    state: present
    update_cache: yes
    cache_valid_time: 3600

- name: Add a lightweight mysqld.conf
  template:
    src=mysqld.cnf.j2
    dest=/etc/mysql/mysql.conf.d/mysqld.cnf
    owner=root
    mode=0775

- name: Start MySQL
  service:
    name=mysql
    state=started
    enabled=yes

- name: Install Orchestrator 2.1.4
  apt: >
    deb=https://github.com/github/orchestrator/releases/download/v2.1.4/orchestrator_2.1.4_amd64.deb

- name: crate symlink to the binary
  file:
    src=/usr/local/orchestrator/orchestrator
    dest=/usr/local/bin/orchestrator
    state=link

- name: Generate Orchestrator config
  template:
    src=orchestrator-sample.conf.json.j2
    dest=/usr/local/orchestrator/conf/orchestrator.conf.json
    owner=root
    mode=0700

- name: Create a new database orchestrator
  mysql_db:
    name: orchestrator
    state: present

- name: Start Orchestrator
  service:
    name=orchestrator
    state=started
    enabled=yes

# - wait_for: host={{ proxysql.admin.host }} port={{ proxysql.admin.port }}  delay=3 state=started

- name: Add servers to orchestrator
  shell: orchestrator -c discover -i {{ hostvars[item]['inventory_hostname'] }}:3306  cli
  with_inventory_hostnames: all:!proxysql
